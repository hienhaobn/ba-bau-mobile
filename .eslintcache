[{"/Users/admin/Code/Home/mobile/babau/App.tsx":"1","/Users/admin/Code/Home/mobile/babau/__tests__/App-test.tsx":"2","/Users/admin/Code/Home/mobile/babau/global.d.ts":"3","/Users/admin/Code/Home/mobile/babau/scripts/compile.ts":"4","/Users/admin/Code/Home/mobile/babau/src/@types/index.d.ts":"5","/Users/admin/Code/Home/mobile/babau/src/@types/user.d.ts":"6","/Users/admin/Code/Home/mobile/babau/src/assets/images/index.ts":"7","/Users/admin/Code/Home/mobile/babau/src/assets/svgs/index.ts":"8","/Users/admin/Code/Home/mobile/babau/src/components/Button/Button.tsx":"9","/Users/admin/Code/Home/mobile/babau/src/components/Header/index.tsx":"10","/Users/admin/Code/Home/mobile/babau/src/components/Input/index.tsx":"11","/Users/admin/Code/Home/mobile/babau/src/components/Toast/index.tsx":"12","/Users/admin/Code/Home/mobile/babau/src/components/TouchableOpacity/index.tsx":"13","/Users/admin/Code/Home/mobile/babau/src/components/index.ts":"14","/Users/admin/Code/Home/mobile/babau/src/configs/index.ts":"15","/Users/admin/Code/Home/mobile/babau/src/constants/env.constant.ts":"16","/Users/admin/Code/Home/mobile/babau/src/constants/global-variables.ts":"17","/Users/admin/Code/Home/mobile/babau/src/constants/index.ts":"18","/Users/admin/Code/Home/mobile/babau/src/contexts/index.ts":"19","/Users/admin/Code/Home/mobile/babau/src/hooks/index.ts":"20","/Users/admin/Code/Home/mobile/babau/src/hooks/useTheme.ts":"21","/Users/admin/Code/Home/mobile/babau/src/i18n/en/index.ts":"22","/Users/admin/Code/Home/mobile/babau/src/i18n/index.ts":"23","/Users/admin/Code/Home/mobile/babau/src/navigation/Navigation.tsx":"24","/Users/admin/Code/Home/mobile/babau/src/navigation/types.ts":"25","/Users/admin/Code/Home/mobile/babau/src/navigation/utils.ts":"26","/Users/admin/Code/Home/mobile/babau/src/screens/account/AccountScreen.tsx":"27","/Users/admin/Code/Home/mobile/babau/src/screens/fetalMovement/FetalMovementScreen.tsx":"28","/Users/admin/Code/Home/mobile/babau/src/screens/fetalMovement/src/utils.ts":"29","/Users/admin/Code/Home/mobile/babau/src/screens/forgotPassword/ForgotPasswordScreen.tsx":"30","/Users/admin/Code/Home/mobile/babau/src/screens/forgotPassword/src/utils.ts":"31","/Users/admin/Code/Home/mobile/babau/src/screens/home/HomeScreen.tsx":"32","/Users/admin/Code/Home/mobile/babau/src/screens/home/src/utils.ts":"33","/Users/admin/Code/Home/mobile/babau/src/screens/index.ts":"34","/Users/admin/Code/Home/mobile/babau/src/screens/launch/LaunchScreen.tsx":"35","/Users/admin/Code/Home/mobile/babau/src/screens/login/LoginScreen.tsx":"36","/Users/admin/Code/Home/mobile/babau/src/screens/login/src/utils.ts":"37","/Users/admin/Code/Home/mobile/babau/src/screens/main/MyTabBar.tsx":"38","/Users/admin/Code/Home/mobile/babau/src/screens/main/constants.ts":"39","/Users/admin/Code/Home/mobile/babau/src/screens/main/index.tsx":"40","/Users/admin/Code/Home/mobile/babau/src/screens/nutritionalRegimen/NutritionalRegimenScreen.tsx":"41","/Users/admin/Code/Home/mobile/babau/src/screens/nutritionalRegimen/src/utils.ts":"42","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyDueDateCalculator/PregnancyDueDateCalculatorScreen.tsx":"43","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyDueDateCalculator/src/utils.ts":"44","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyProducts/PregnancyProductsScreen.tsx":"45","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyProducts/src/utils.ts":"46","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyWeekByWeek/PregnancyWeekByWeekScreen.tsx":"47","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyWeekByWeek/src/utils.ts":"48","/Users/admin/Code/Home/mobile/babau/src/screens/premium/PremiumScreen.tsx":"49","/Users/admin/Code/Home/mobile/babau/src/screens/prenatalCareCheckups/PrenatalCareCheckupsScreen.tsx":"50","/Users/admin/Code/Home/mobile/babau/src/screens/prenatalCareCheckups/src/utils.ts":"51","/Users/admin/Code/Home/mobile/babau/src/screens/register/RegisterScreen.tsx":"52","/Users/admin/Code/Home/mobile/babau/src/screens/register/src/utils.ts":"53","/Users/admin/Code/Home/mobile/babau/src/screens/verifyOTP/VerifyOTPScreen.tsx":"54","/Users/admin/Code/Home/mobile/babau/src/screens/verifyOTP/src/utils.ts":"55","/Users/admin/Code/Home/mobile/babau/src/services/common/auth.header.ts":"56","/Users/admin/Code/Home/mobile/babau/src/services/index.ts":"57","/Users/admin/Code/Home/mobile/babau/src/services/userService.ts":"58","/Users/admin/Code/Home/mobile/babau/src/states/counter/index.ts":"59","/Users/admin/Code/Home/mobile/babau/src/states/index.ts":"60","/Users/admin/Code/Home/mobile/babau/src/states/message.ts":"61","/Users/admin/Code/Home/mobile/babau/src/states/types.ts":"62","/Users/admin/Code/Home/mobile/babau/src/states/user/index.ts":"63","/Users/admin/Code/Home/mobile/babau/src/states/user/selector.ts":"64","/Users/admin/Code/Home/mobile/babau/src/themes/colors.ts":"65","/Users/admin/Code/Home/mobile/babau/src/themes/fonts.ts":"66","/Users/admin/Code/Home/mobile/babau/src/themes/index.ts":"67","/Users/admin/Code/Home/mobile/babau/src/themes/sizes.ts":"68","/Users/admin/Code/Home/mobile/babau/src/typings/index.ts":"69","/Users/admin/Code/Home/mobile/babau/src/utils/dimensions.ts":"70","/Users/admin/Code/Home/mobile/babau/src/utils/getThemeColor.ts":"71","/Users/admin/Code/Home/mobile/babau/src/utils/scales.ts":"72","/Users/admin/Code/Home/mobile/babau/src/utils/storages.ts":"73","/Users/admin/Code/Home/mobile/babau/src/utils/string.ts":"74","/Users/admin/Code/Home/mobile/babau/src/utils/toast.ts":"75","/Users/admin/Code/Home/mobile/babau/src/screens/premium/src/utils.ts":"76","/Users/admin/Code/Home/mobile/babau/src/screens/registerSuccess/RegisterSuccessScreen.tsx":"77","/Users/admin/Code/Home/mobile/babau/src/screens/registerSuccess/src/utils.ts":"78"},{"size":542,"mtime":1679798159748,"results":"79","hashOfConfig":"80"},{"size":266,"mtime":1678698354264,"results":"81","hashOfConfig":"80"},{"size":50,"mtime":1678897920649,"results":"82","hashOfConfig":"80"},{"size":1579,"mtime":1678722258447,"results":"83","hashOfConfig":"80"},{"size":30,"mtime":1679797511058,"results":"84","hashOfConfig":"80"},{"size":604,"mtime":1679799676299,"results":"85","hashOfConfig":"80"},{"size":1239,"mtime":1680120443996,"results":"86","hashOfConfig":"80"},{"size":1755,"mtime":1680114909291,"results":"87","hashOfConfig":"80"},{"size":3035,"mtime":1679332498750,"results":"88","hashOfConfig":"80"},{"size":3574,"mtime":1679160091051,"results":"89","hashOfConfig":"80"},{"size":4968,"mtime":1679331755990,"results":"90","hashOfConfig":"80"},{"size":863,"mtime":1679798925705,"results":"91","hashOfConfig":"80"},{"size":818,"mtime":1678875004569,"results":"92","hashOfConfig":"80"},{"size":11,"mtime":1678737905046,"results":"93","hashOfConfig":"80"},{"size":11,"mtime":1678737904118,"results":"94","hashOfConfig":"80"},{"size":49,"mtime":1679741902255,"results":"95","hashOfConfig":"80"},{"size":453,"mtime":1679160091051,"results":"96","hashOfConfig":"80"},{"size":36,"mtime":1678895557624,"results":"97","hashOfConfig":"80"},{"size":11,"mtime":1678737907796,"results":"98","hashOfConfig":"80"},{"size":11,"mtime":1678737908807,"results":"99","hashOfConfig":"80"},{"size":406,"mtime":1679160091051,"results":"100","hashOfConfig":"80"},{"size":129,"mtime":1678902297820,"results":"101","hashOfConfig":"80"},{"size":477,"mtime":1678902305156,"results":"102","hashOfConfig":"80"},{"size":2859,"mtime":1680122364034,"results":"103","hashOfConfig":"80"},{"size":494,"mtime":1680122356890,"results":"104","hashOfConfig":"80"},{"size":1896,"mtime":1679535914554,"results":"105","hashOfConfig":"80"},{"size":5708,"mtime":1680121445038,"results":"106","hashOfConfig":"80"},{"size":5847,"mtime":1680055026753,"results":"107","hashOfConfig":"80"},{"size":112,"mtime":1679933625401,"results":"108","hashOfConfig":"80"},{"size":3127,"mtime":1679332361906,"results":"109","hashOfConfig":"80"},{"size":114,"mtime":1679331091179,"results":"110","hashOfConfig":"80"},{"size":8407,"mtime":1680120273314,"results":"111","hashOfConfig":"80"},{"size":94,"mtime":1679791334225,"results":"112","hashOfConfig":"80"},{"size":1294,"mtime":1680122344127,"results":"113","hashOfConfig":"80"},{"size":2067,"mtime":1679769337079,"results":"114","hashOfConfig":"80"},{"size":5085,"mtime":1679791400379,"results":"115","hashOfConfig":"80"},{"size":145,"mtime":1679791360375,"results":"116","hashOfConfig":"80"},{"size":2769,"mtime":1679293351165,"results":"117","hashOfConfig":"80"},{"size":137,"mtime":1678843420222,"results":"118","hashOfConfig":"80"},{"size":975,"mtime":1679535557698,"results":"119","hashOfConfig":"80"},{"size":8467,"mtime":1680117205507,"results":"120","hashOfConfig":"80"},{"size":122,"mtime":1680112248627,"results":"121","hashOfConfig":"80"},{"size":3273,"mtime":1680069678884,"results":"122","hashOfConfig":"80"},{"size":138,"mtime":1680055618070,"results":"123","hashOfConfig":"80"},{"size":2863,"mtime":1680118079632,"results":"124","hashOfConfig":"80"},{"size":120,"mtime":1680112453837,"results":"125","hashOfConfig":"80"},{"size":6576,"mtime":1680114520922,"results":"126","hashOfConfig":"80"},{"size":124,"mtime":1680111865269,"results":"127","hashOfConfig":"80"},{"size":5658,"mtime":1680121357143,"results":"128","hashOfConfig":"80"},{"size":7391,"mtime":1680114733949,"results":"129","hashOfConfig":"80"},{"size":126,"mtime":1680070425115,"results":"130","hashOfConfig":"80"},{"size":6342,"mtime":1680121513536,"results":"131","hashOfConfig":"80"},{"size":102,"mtime":1679500183236,"results":"132","hashOfConfig":"80"},{"size":4715,"mtime":1680122424049,"results":"133","hashOfConfig":"80"},{"size":128,"mtime":1679799710892,"results":"134","hashOfConfig":"80"},{"size":330,"mtime":1679744598417,"results":"135","hashOfConfig":"80"},{"size":56,"mtime":1679753589074,"results":"136","hashOfConfig":"80"},{"size":904,"mtime":1679754429238,"results":"137","hashOfConfig":"80"},{"size":857,"mtime":1679723714770,"results":"138","hashOfConfig":"80"},{"size":1670,"mtime":1679722835657,"results":"139","hashOfConfig":"80"},{"size":476,"mtime":1679752534296,"results":"140","hashOfConfig":"80"},{"size":43,"mtime":1678812044215,"results":"141","hashOfConfig":"80"},{"size":3456,"mtime":1679754619422,"results":"142","hashOfConfig":"80"},{"size":11,"mtime":1679715005019,"results":"143","hashOfConfig":"80"},{"size":1056,"mtime":1679797461577,"results":"144","hashOfConfig":"80"},{"size":220,"mtime":1678876272064,"results":"145","hashOfConfig":"80"},{"size":114,"mtime":1678896484580,"results":"146","hashOfConfig":"80"},{"size":442,"mtime":1678876060381,"results":"147","hashOfConfig":"80"},{"size":11,"mtime":1678737917295,"results":"148","hashOfConfig":"80"},{"size":1119,"mtime":1678737315565,"results":"149","hashOfConfig":"80"},{"size":362,"mtime":1678897100812,"results":"150","hashOfConfig":"80"},{"size":870,"mtime":1678737002765,"results":"151","hashOfConfig":"80"},{"size":1292,"mtime":1679769005309,"results":"152","hashOfConfig":"80"},{"size":440,"mtime":1679713144800,"results":"153","hashOfConfig":"80"},{"size":173,"mtime":1679797547326,"results":"154","hashOfConfig":"80"},{"size":94,"mtime":1680121798930,"results":"155","hashOfConfig":"80"},{"size":2058,"mtime":1680122660135,"results":"156","hashOfConfig":"80"},{"size":116,"mtime":1680122394076,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tsm6fm",{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"164"},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"190"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"243"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"260"},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","suppressedMessages":"266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"281"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"317"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"327"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346"},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362"},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","suppressedMessages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","suppressedMessages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","suppressedMessages":"380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","suppressedMessages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","suppressedMessages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/admin/Code/Home/mobile/babau/App.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/__tests__/App-test.tsx",["408","409"],[],"/**\n * @format\n */\n\nimport 'react-native';\nimport React from 'react';\nimport App from '../App';\n\n// Note: test renderer must be required after react-native.\nimport renderer from 'react-test-renderer';\n\nit('renders correctly', () => {\n  renderer.create(<App />);\n});\n","/Users/admin/Code/Home/mobile/babau/global.d.ts",[],[],"/Users/admin/Code/Home/mobile/babau/scripts/compile.ts",[],["410","411","412"],"/Users/admin/Code/Home/mobile/babau/src/@types/index.d.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/@types/user.d.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/assets/images/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/assets/svgs/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/components/Button/Button.tsx",["413","414"],["415"],"import React from 'react';\nimport { ActivityIndicator, StyleProp, StyleSheet, Text, TextStyle, ViewStyle } from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\ninterface ButtonProps {\n    title: string;\n    width?: number;\n    height?: number;\n    disabled?: boolean;\n    disableGradient?: boolean;\n    customStyles?: StyleProp<ViewStyle>;\n    customTextStyles?: StyleProp<TextStyle>;\n    loadingColor?: string;\n    onPress?: () => void;\n    loading?: boolean;\n    icon?: React.ReactNode;\n}\n\n// eslint-disable-next-line complexity\nconst Button = (props: ButtonProps) => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n    const {\n        title,\n        width,\n        height,\n        disabled = false,\n        disableGradient = false,\n        customStyles,\n        customTextStyles,\n        loading,\n        loadingColor,\n        icon,\n    } = props;\n\n    return (\n        <TouchableOpacity\n            style={[\n                styles.container,\n                width ? { width } : {},\n                height ? { height } : {},\n                disabled ? { backgroundColor: getThemeColor().Text_Color_Opacity_30 } : {},\n                customStyles,\n            ]}\n            onPress={props.onPress}\n            disabled={disabled || loading}>\n            {disabled || disableGradient ? null : (\n                <LinearGradient\n                    useAngle\n                    angle={90}\n                    start={{ x: 0, y: 1 }}\n                    colors={[getThemeColor().Color_Primary, getThemeColor().Color_Primary]}\n                    style={styles.linearGradient}\n                />\n            )}\n            {loading ? (\n                <ActivityIndicator color={loadingColor || getThemeColor().Text_Dark_1} />\n            ) : (\n                <Text\n                    style={[\n                        styles.title,\n                        customTextStyles,\n                        disabled ? { color: getThemeColor().Text_Color_Opacity_30 } : {},\n                    ]}>\n                    {title}\n                </Text>\n            )}\n            {icon && icon}\n        </TouchableOpacity>\n    );\n};\n\nexport default Button;\n\nconst myStyles = (_theme: string) =>\n    StyleSheet.create({\n        container: {\n            height: scales(40),\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: scales(5),\n        },\n        linearGradient: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            borderRadius: scales(5),\n        },\n        title: {\n            ...Fonts.inter600,\n            color: getThemeColor().white,\n            fontSize: scales(14),\n            paddingBottom: scales(1),\n        },\n    });\n","/Users/admin/Code/Home/mobile/babau/src/components/Header/index.tsx",["416","417"],[],"import React, { ReactElement } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport SvgIcons from 'assets/svgs';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { goBack } from 'navigation/utils';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\n\ninterface Props {\n    showLineBottom?: boolean;\n    title?: string;\n    iconLeft?: ReactElement;\n    hideLeft?: boolean;\n    onPressLeft?: () => void;\n    iconRight?: ReactElement;\n    onPressRight?: () => void;\n}\n\nconst Header = (props: Props) => {\n    const { theme } = useTheme();\n    const styles = getStyles(theme);\n    const { showLineBottom, title, iconLeft, hideLeft, onPressLeft, iconRight, onPressRight } = props;\n\n    const renderLeft = () =>\n        !hideLeft ? (\n            <TouchableOpacity\n                style={styles.leftView}\n                onPress={onPressLeft || goBack}\n                hitSlop={{ top: 10, left: 10, right: 10, bottom: 10 }}>\n                {iconLeft ? (\n                    iconLeft\n                ) : (\n                    <SvgIcons.IcBack color={getThemeColor().Text_Dark_1} width={scales(20)} height={scales(15)} />\n                )}\n            </TouchableOpacity>\n        ) : (\n            <View style={styles.leftView} />\n        );\n\n    const renderCenter = () => (\n        <View style={styles.viewTitle}>\n            <Text style={styles.textTitle} numberOfLines={1}>\n                {title?.trim()}\n            </Text>\n        </View>\n    );\n\n    const renderRight = () =>\n        iconRight ? (\n            <TouchableOpacity\n                style={styles.rightView}\n                disabled={!onPressRight}\n                onPress={onPressRight ? onPressRight : () => {}}>\n                {iconRight}\n            </TouchableOpacity>\n        ) : (\n            <View style={styles.rightView} />\n        );\n\n    return (\n        <>\n            <View style={styles.container}>\n                {renderLeft()}\n                {renderCenter()}\n                {renderRight()}\n            </View>\n            {showLineBottom ? <View style={styles.line} /> : null}\n        </>\n    );\n};\n\nexport default Header;\n\nconst getStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flexDirection: 'row',\n            paddingTop: Sizes.statusBarHeight,\n            height: Sizes.statusBarHeight + scales(45),\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: color.Color_Bg,\n        },\n        line: {\n            height: scales(1),\n            width: '100%',\n            backgroundColor: color.Text_Dark_1,\n            marginTop: scales(10),\n        },\n        leftView: {\n            justifyContent: 'center',\n            position: 'absolute',\n            top: Sizes.statusBarHeight,\n            left: scales(15),\n            bottom: 0,\n        },\n        viewTitle: {\n            flex: 1,\n            marginHorizontal: scales(45),\n            height: scales(45),\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        textTitle: {\n            ...Fonts.inter600,\n            color: color.Text_Dark_1,\n            fontSize: scales(18),\n        },\n        rightView: {\n            justifyContent: 'center',\n            position: 'absolute',\n            top: Sizes.statusBarHeight,\n            right: scales(15),\n            bottom: 0,\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/components/Input/index.tsx",["418"],[],"import React, { ReactElement } from 'react';\nimport { StyleProp, StyleSheet, Text, TextInput, TextInputProps, TextStyle, View, ViewStyle } from 'react-native';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nexport interface InputProps extends TextInputProps {\n    title?: string;\n    rightIconTitle?: ReactElement;\n    rightTitle?: string;\n    onPressRightTitle?: () => void;\n    errorMessage?: string;\n    containerStyle?: StyleProp<ViewStyle>;\n    inputContainerStyle?: StyleProp<ViewStyle>;\n    inputStyle?: StyleProp<TextStyle>;\n    bottomMessage?: string;\n    icon?: ReactElement;\n    onPressIcon?: () => void;\n    leftIcon?: ReactElement;\n    onPressLeftIcon?: () => void;\n    leftIconStyle?: StyleProp<ViewStyle>;\n    rightIconStyle?: StyleProp<ViewStyle>;\n}\n\nconst Input = (props: InputProps) => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n    const {\n        title,\n        rightTitle,\n        rightIconTitle,\n        onPressRightTitle,\n        icon,\n        onPressIcon,\n        errorMessage,\n        bottomMessage,\n        leftIcon,\n        onPressLeftIcon,\n        containerStyle,\n        inputContainerStyle,\n        inputStyle,\n        leftIconStyle,\n        rightIconStyle,\n    } = props;\n\n    const renderHeader = () =>\n        title || rightTitle ? (\n            <View style={styles.headerContainer}>\n                <Text style={styles.headerText}>{title}</Text>\n                {rightTitle || rightIconTitle ? (\n                    <TouchableOpacity onPress={onPressRightTitle} style={styles.headerRight}>\n                        {rightIconTitle ? rightIconTitle : null}\n                        {rightTitle ? (\n                            <Text style={[styles.headerText, { paddingLeft: scales(5) }]}>{rightTitle}</Text>\n                        ) : null}\n                    </TouchableOpacity>\n                ) : null}\n            </View>\n        ) : null;\n\n    return (\n        <View style={[styles.container, containerStyle]}>\n            {renderHeader()}\n            <View\n                style={[\n                    styles.inputContainer,\n                    inputContainerStyle,\n                    errorMessage ? { borderColor: getThemeColor().Color_Red_1 } : {},\n                ]}>\n                {leftIcon ? (\n                    <TouchableOpacity onPress={onPressLeftIcon} hitSlop={styles.hitSlopIcon} style={leftIconStyle}>\n                        {leftIcon}\n                    </TouchableOpacity>\n                ) : null}\n                <TextInput\n                    style={[styles.input, inputStyle]}\n                    placeholderTextColor={getThemeColor().Text_Dark_4}\n                    {...props}\n                />\n                {icon ? (\n                    <TouchableOpacity onPress={onPressIcon} hitSlop={styles.hitSlopIcon} style={rightIconStyle}>\n                        {icon}\n                    </TouchableOpacity>\n                ) : null}\n            </View>\n            {errorMessage ? (\n                <Text style={styles.errorText}>{errorMessage}</Text>\n            ) : bottomMessage ? (\n                <Text style={styles.bottomText}>{bottomMessage}</Text>\n            ) : null}\n        </View>\n    );\n};\n\nexport default Input;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {},\n        headerContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            paddingBottom: scales(10),\n        },\n        headerText: {\n            ...Fonts.inter400,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n        },\n        headerRight: {\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        inputContainer: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            height: scales(46),\n            backgroundColor: color.Light_2,\n            borderRadius: scales(6),\n            paddingRight: scales(15),\n            borderColor: color.transparent,\n            borderWidth: scales(1),\n        },\n        input: {\n            flex: 1,\n            ...Fonts.inter600,\n            fontSize: scales(13),\n            color: color.Text_Dark_1,\n            height: scales(46),\n            paddingHorizontal: scales(15),\n        },\n        hitSlopIcon: {\n            top: 15,\n            bottom: 15,\n            left: 15,\n            right: 15,\n        },\n        errorText: {\n            ...Fonts.inter400,\n            paddingTop: scales(5),\n            color: color.Color_Red_1,\n            fontSize: scales(13),\n        },\n        bottomText: {\n            ...Fonts.inter400,\n            paddingTop: scales(10),\n            color: color.Text_Dark_3,\n            fontSize: scales(13),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/components/Toast/index.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/components/TouchableOpacity/index.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/components/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/configs/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/constants/env.constant.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/constants/global-variables.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/constants/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/contexts/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/hooks/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/hooks/useTheme.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/i18n/en/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/i18n/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/navigation/Navigation.tsx",["419"],[],"/Users/admin/Code/Home/mobile/babau/src/navigation/types.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/navigation/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/account/AccountScreen.tsx",["420"],[],"import React from 'react';\nimport { Image, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport Images from 'assets/images';\nimport SvgIcons from 'assets/svgs';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { navigate } from 'navigation/utils';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst AccountScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderContentHeader = () => (\n        <View style={styles.contentHeaderContainer}>\n            <Image source={Images.GirlHome} style={styles.girlHome} />\n        </View>\n    );\n\n    const renderUsername = () => <Text style={styles.username}>Saka</Text>;\n\n    const renderItems = () => (\n        <View style={styles.itemsContainer}>\n            <TouchableOpacity style={styles.itemContainer}>\n                <View style={styles.itemLeftContainer}>\n                    <Image source={Images.UserInfo} style={styles.itemIconLeft} resizeMode=\"contain\" />\n                    <Text style={styles.title}>Thông tin tài khoản</Text>\n                </View>\n                <SvgIcons.IcForward width={scales(15)} height={scales(15)} color={getThemeColor().Text_Dark_1} />\n            </TouchableOpacity>\n            <View style={styles.line} />\n            <TouchableOpacity style={styles.itemContainer}>\n                <View style={styles.itemLeftContainer}>\n                    <Image source={Images.ChangePassword} style={styles.itemIconLeft} resizeMode=\"contain\" />\n                    <Text style={styles.title}>Đổi mật khẩu</Text>\n                </View>\n                <SvgIcons.IcForward width={scales(15)} height={scales(15)} color={getThemeColor().Text_Dark_1} />\n            </TouchableOpacity>\n            <View style={styles.line} />\n            <TouchableOpacity style={styles.itemContainer}>\n                <View style={styles.itemLeftContainer}>\n                    <Image source={Images.StartGroup} style={styles.itemIconLeft} resizeMode=\"contain\" />\n                    <Text style={styles.title}>Đánh giá</Text>\n                </View>\n                <SvgIcons.IcForward width={scales(15)} height={scales(15)} color={getThemeColor().Text_Dark_1} />\n            </TouchableOpacity>\n            <View style={styles.line} />\n            <TouchableOpacity style={styles.itemContainer} onPress={() => navigate('Login')}>\n                <View style={styles.itemLeftContainer}>\n                    <Image source={Images.LogOut} style={styles.itemIconLeft} resizeMode=\"contain\" />\n                    <Text style={styles.title}>Đăng xuất</Text>\n                </View>\n                <SvgIcons.IcForward width={scales(15)} height={scales(15)} color={getThemeColor().Text_Dark_1} />\n            </TouchableOpacity>\n            <View style={styles.line} />\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <ScrollView\n                style={styles.wrapperContent}\n                contentContainerStyle={styles.contentContainer}\n                keyboardShouldPersistTaps=\"handled\"\n                showsVerticalScrollIndicator={false}>\n                <View style={styles.imageHome} />\n                {renderContentHeader()}\n                {renderUsername()}\n                {renderItems()}\n            </ScrollView>\n        </View>\n    );\n};\n\nconst myStyles = (themeCurrent: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        imageHome: {\n            backgroundColor: color.Color_Primary2,\n            width: Sizes.scrWidth * 2,\n            borderRadius: Sizes.scrWidth,\n            height: Sizes.scrWidth * 2,\n            position: 'absolute',\n            top: -Sizes.scrWidth / 2 - Sizes.scrWidth,\n            left: -Sizes.scrWidth / 2,\n        },\n        wrapperContent: {\n            flexGrow: 1,\n            paddingHorizontal: scales(15),\n        },\n        contentContainer: {\n            paddingBottom: scales(30),\n            paddingTop: scales(15),\n        },\n        contentHeaderContainer: {\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: Sizes.scrWidth / 4,\n        },\n        girlHome: {\n            marginTop: scales(10),\n            width: scales(120),\n            height: scales(120),\n            backgroundColor: color.Color_Primary,\n            borderRadius: scales(120),\n            borderWidth: 1.5,\n            borderColor: color.white,\n        },\n        itemsContainer: {\n            marginTop: scales(30),\n        },\n        username: {\n            ...Fonts.inter600,\n            fontSize: scales(16),\n            color: color.Text_Dark_1,\n            alignSelf: 'center',\n            marginTop: scales(12),\n        },\n        itemContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginBottom: scales(15),\n        },\n        itemIconLeft: {\n            width: scales(30),\n            height: scales(30),\n        },\n        itemLeftContainer: {\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        title: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginLeft: scales(15),\n        },\n        line: {\n            borderWidth: 0.5,\n            borderColor: color.Text_Dark_5,\n            marginBottom: scales(15),\n        },\n    });\n};\nexport default AccountScreen;\n","/Users/admin/Code/Home/mobile/babau/src/screens/fetalMovement/FetalMovementScreen.tsx",["421","422"],[],"import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\n\nimport SvgIcons from 'assets/svgs';\n\nimport Header from 'components/Header';\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst FetalMovementScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderHeader = () => (\n        <Header\n            title=\"Điểm cử động thai nhi\"\n            iconRight={\n                <SvgIcons.IcLineChart width={scales(25)} height={scales(25)} color={getThemeColor().Text_Dark_1} />\n            }\n        />\n    );\n\n    const renderProgressCircle = () => {\n        return (\n            <View\n                style={{\n                    alignItems: 'center',\n                }}>\n                <View style={styles.progressCircleContainer}>\n                    <AnimatedCircularProgress\n                        size={200}\n                        width={6}\n                        fill={70}\n                        rotation={360}\n                        tintColor={getThemeColor().white}\n                        backgroundColor={getThemeColor().Text_Dark_5}>\n                        {(fill) => (\n                            <View style={styles.fillContainer}>\n                                <Text style={styles.textFill}>Thời gian còn lại</Text>\n                                <Text style={styles.fill}>{`00 : 00`}</Text>\n                            </View>\n                        )}\n                    </AnimatedCircularProgress>\n                </View>\n            </View>\n        );\n    };\n\n    const renderTimeAndMovement = () => (\n        <View style={styles.timeAndMovementContainer}>\n            <View style={styles.itemTimeAndMovement}>\n                <Text style={styles.titleTimeAndMovement}>Thời gian bắt đầu</Text>\n                <Text style={styles.valueTimeAndMovement}>00 : 00</Text>\n            </View>\n            <View style={styles.itemTimeAndMovement}>\n                <Text style={styles.titleTimeAndMovement}>Số lần cử động</Text>\n                <Text style={styles.valueTimeAndMovement}>0</Text>\n            </View>\n        </View>\n    );\n\n    const renderUserManual = () => <Text style={styles.userManual}>Hướng dẫn sử dụng</Text>;\n\n    const renderButtons = () => (\n        <View style={styles.buttonContainer}>\n            <TouchableOpacity style={styles.itemButton}>\n                <Text style={styles.texButton}>-</Text>\n            </TouchableOpacity>\n            <TouchableOpacity style={[styles.itemButton, styles.buttonPlay]}>\n                <SvgIcons.IcPlay width={scales(20)} height={scales(20)} color={getThemeColor().white} />\n            </TouchableOpacity>\n            <TouchableOpacity style={styles.itemButton}>\n                <Text style={styles.texButton}>+</Text>\n            </TouchableOpacity>\n        </View>\n    );\n\n    const renderContent = () => (\n        <View style={styles.content}>\n            {renderProgressCircle()}\n            {renderTimeAndMovement()}\n            {renderUserManual()}\n            {renderButtons()}\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            {renderHeader()}\n            {renderContent()}\n        </View>\n    );\n};\n\nexport default FetalMovementScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        content: {\n            marginHorizontal: scales(15),\n        },\n        progressCircleContainer: {\n            backgroundColor: getThemeColor().Color_Primary,\n            padding: scales(10),\n            borderRadius: scales(9999),\n            marginTop: scales(40),\n        },\n        fillContainer: {\n            alignItems: 'center',\n        },\n        fill: {\n            ...Fonts.inter600,\n            fontSize: scales(24),\n            color: color.Text_Dark_1,\n            marginTop: scales(12),\n        },\n        textFill: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n        },\n        timeAndMovementContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: scales(40),\n        },\n        itemTimeAndMovement: {\n            alignItems: 'center',\n        },\n        titleTimeAndMovement: {\n            ...Fonts.inter600,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n        },\n        valueTimeAndMovement: {\n            ...Fonts.inter700,\n            fontSize: scales(32),\n            color: color.Text_Dark_1,\n            marginTop: scales(12),\n        },\n        userManual: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Color_Primary,\n            marginVertical: scales(60),\n            alignSelf: 'center',\n        },\n        buttonContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n        },\n        itemButton: {\n            backgroundColor: color.Color_Primary,\n            borderRadius: 999,\n            width: scales(60),\n            height: scales(60),\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        texButton: {\n            ...Fonts.inter600,\n            fontSize: scales(20),\n            color: color.white,\n        },\n        buttonPlay: {\n            width: scales(80),\n            height: scales(80),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/fetalMovement/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/forgotPassword/ForgotPasswordScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/forgotPassword/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/home/HomeScreen.tsx",["423"],[],"import React from 'react';\nimport { Image, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport Images from 'assets/images';\nimport SvgIcons from 'assets/svgs';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { navigate } from 'navigation/utils';\n\nimport { goToFetalMovement } from 'screens/fetalMovement/src/utils';\nimport { goToNutritionalRegimen } from 'screens/nutritionalRegimen/src/utils';\nimport { goToPregnancyDueDateCalculator } from 'screens/pregnancyDueDateCalculator/src/utils';\nimport { goToPregnancyProducts } from 'screens/pregnancyProducts/src/utils';\nimport { goToPregnancyWeekByWeek } from 'screens/pregnancyWeekByWeek/src/utils';\nimport { goToPrenatalCareCheckups } from 'screens/prenatalCareCheckups/src/utils';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst HomeScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderContentHeader = () => (\n        <View style={styles.contentHeaderContainer}>\n            <View style={styles.fetusInfo}>\n                <Text style={styles.titleFetus}>Lich khám</Text>\n                <Text style={styles.valueFetus}>24/12</Text>\n            </View>\n            <View>\n                <Image source={Images.GirlHome} style={styles.girlHome} />\n            </View>\n            <View style={styles.fetusInfo}>\n                <Text style={styles.titleFetus}>Tuần thai</Text>\n                <Text style={styles.valueFetus}>20</Text>\n            </View>\n        </View>\n    );\n\n    const renderContentItems = () => (\n        <View style={styles.contentItemContainer}>\n            <View style={styles.rowItems}>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToFetalMovement}>\n                    <Image source={Images.HomeMove} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Điểm cử động thai nhi</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToPregnancyDueDateCalculator}>\n                    <Image source={Images.HomeClock} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Dự tính ngày sinh</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToPrenatalCareCheckups}>\n                    <Image source={Images.HomeCalendar} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Lich khám</Text>\n                </TouchableOpacity>\n            </View>\n            <View style={[styles.rowItems, styles.rowBottom]}>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToPregnancyWeekByWeek}>\n                    <Image source={Images.HomePregnantMother} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Thai kỳ theo tuần</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToNutritionalRegimen}>\n                    <Image source={Images.HomeCategory} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Chế độ dinh dưỡng</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContainer} onPress={goToPregnancyProducts}>\n                    <Image source={Images.HomeLike} style={styles.imgItem} />\n                    <Text style={styles.itemText}>Sản phẩm cho mẹ bầu</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    const renderContentBottom = () => (\n        <View>\n            <Text style={styles.bottomDes}>Sử dụng nhiều tiện ích hơn với dịch vụ</Text>\n            <View style={styles.premiumContainer}>\n                <TouchableOpacity style={styles.premium} onPress={() => navigate('Premium')}>\n                    <SvgIcons.IcStar color={getThemeColor().white} width={scales(20)} height={scales(20)} />\n                    <Text style={styles.premiumText}>Mẹ bầu Premium</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <ScrollView\n                style={styles.wrapperContent}\n                contentContainerStyle={styles.contentContainer}\n                keyboardShouldPersistTaps=\"handled\"\n                showsVerticalScrollIndicator={false}>\n                <View style={styles.imageHome} />\n                {renderContentHeader()}\n                {renderContentItems()}\n                {renderContentBottom()}\n            </ScrollView>\n        </View>\n    );\n};\n\nexport default HomeScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        imageHome: {\n            backgroundColor: color.Color_Primary2,\n            width: Sizes.scrWidth * 2,\n            borderRadius: Sizes.scrWidth,\n            height: Sizes.scrWidth * 2,\n            position: 'absolute',\n            top: -Sizes.scrWidth / 2 - Sizes.scrWidth,\n            left: -Sizes.scrWidth / 2,\n        },\n        wrapperContent: {\n            flexGrow: 1,\n            paddingHorizontal: scales(15),\n        },\n        contentContainer: {\n            paddingBottom: scales(30),\n            paddingTop: scales(15),\n        },\n        girlHome: {\n            top: scales(10),\n            width: scales(120),\n            height: scales(120),\n            backgroundColor: color.Color_Primary,\n            borderRadius: scales(120),\n        },\n        contentHeaderContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: Sizes.scrWidth / 4,\n        },\n        fetusInfo: {\n            backgroundColor: color.Color_Primary,\n            width: scales(100),\n            height: scales(100),\n            borderRadius: scales(100),\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        titleFetus: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.white,\n\n            shadowColor: color.Text_Dark_1,\n            shadowOffset: { width: -1, height: 4 },\n            shadowOpacity: 0.3,\n            shadowRadius: 3,\n        },\n        valueFetus: {\n            ...Fonts.inter700,\n            fontSize: scales(20),\n            color: color.white,\n            marginTop: scales(8),\n\n            shadowColor: color.Text_Dark_1,\n            shadowOffset: { width: -1, height: 4 },\n            shadowOpacity: 0.3,\n            shadowRadius: 3,\n        },\n        contentItemContainer: {\n            marginTop: scales(60),\n        },\n        imgItem: {\n            width: scales(65),\n            height: scales(65),\n        },\n        itemContainer: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: (Sizes.scrWidth - scales(30)) / 3,\n        },\n        itemText: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginTop: scales(15),\n            textAlign: 'center',\n            width: (Sizes.scrWidth - scales(30)) / 4,\n        },\n        rowItems: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n        },\n        rowBottom: {\n            marginTop: scales(30),\n        },\n        bottomDes: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginVertical: scales(30),\n            alignSelf: 'center',\n        },\n        premiumContainer: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n        },\n        premium: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            backgroundColor: color.Color_Primary,\n            paddingVertical: scales(15),\n            paddingHorizontal: scales(24),\n            borderRadius: scales(30),\n        },\n        premiumText: {\n            ...Fonts.inter600,\n            fontSize: scales(16),\n            color: color.white,\n            marginLeft: scales(12),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/home/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/launch/LaunchScreen.tsx",["424"],[],"import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StyleSheet, View } from 'react-native';\nimport SplashScreen from 'react-native-splash-screen';\n\nimport SvgIcons from 'assets/svgs';\n\nimport { GlobalVariables, IToken } from 'constants/global-variables';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { resetStack } from 'navigation/utils';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\nimport Storages, { KeyStorage } from 'utils/storages';\n\nimport 'i18n';\nimport { RootNavigatorParamList } from 'navigation/types';\n\nconst LaunchScreen = () => {\n    const { theme } = useTheme();\n    const { i18n } = useTranslation();\n    const styles = myStyles(theme);\n\n    const initLocale = React.useCallback(() => {\n        const currentLocale = 'en'; // Todo\n        i18n.changeLanguage(currentLocale);\n    }, [i18n]);\n\n    React.useEffect(() => {\n        initLocale();\n    }, [initLocale]);\n\n    useEffect(() => {\n        SplashScreen.hide();\n        onNavigator();\n    }, []);\n\n    const onNavigator = async () => {\n        const tokenInfo: IToken | null = await Storages.getObject(KeyStorage.Token);\n\n        let screenName: keyof RootNavigatorParamList = 'Login';\n        if (tokenInfo?.accessToken) {\n            GlobalVariables.tokenInfo = {\n                ...tokenInfo,\n            };\n            screenName = 'Main';\n        }\n\n        setTimeout(() => {\n            resetStack(screenName);\n        }, 200);\n    };\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.img}>\n                <SvgIcons.IcLogoLaunch width={scales(365)} height={scales(365)} />\n            </View>\n        </View>\n    );\n};\n\nexport default LaunchScreen;\n\nconst myStyles = (theme: string) =>\n    StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: getThemeColor().Color_Primary,\n        },\n        img: {\n            flex: 1,\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n    });\n","/Users/admin/Code/Home/mobile/babau/src/screens/login/LoginScreen.tsx",["425"],[],"import React, { useCallback, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport { goToMain } from './src/utils';\n\nimport SvgIcons from 'assets/svgs';\nimport Button from 'components/Button/Button';\nimport Input from 'components/Input';\nimport TouchableOpacity from 'components/TouchableOpacity';\nimport { useTheme } from 'hooks/useTheme';\nimport { goToForgotPassword } from 'screens/forgotPassword/src/utils';\nimport { goToRegister } from 'screens/register/src/utils';\nimport { Fonts, Sizes } from 'themes';\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst LoginScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n    const [securePassword, setSecurePassword] = useState<boolean>(true);\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n\n    const onLogin = () => {\n        goToMain();\n    };\n\n    const renderHeader = useCallback(() => {\n        return (\n            <View style={styles.headerContainer}>\n                <Text style={styles.textHeader}>Đăng nhập</Text>\n                <View style={styles.iconHeaderContainer}>\n                    <SvgIcons.IcLogoLaunch width={scales(150)} height={scales(150)} />\n                </View>\n            </View>\n        );\n    }, []);\n\n    const renderInputEmail = () => (\n        <View>\n            <Text style={styles.title}>Email</Text>\n            <Input value={email} onChangeText={setEmail} placeholder=\"Vui lòng nhập email\" />\n        </View>\n    );\n\n    const renderInputPassword = () => {\n        const Icon = SvgIcons[`IcVisibility${securePassword ? 'Off' : ''}`];\n        return (\n            <View style={styles.inputPasswordContainer}>\n                <Text style={styles.title}>Mật khẩu</Text>\n                <Input\n                    value={password}\n                    onChangeText={setPassword}\n                    placeholder=\"Vui lòng nhập mật khẩu\"\n                    secureTextEntry={securePassword}\n                    icon={<Icon width={scales(15)} height={scales(15)} />}\n                    onPressIcon={() => setSecurePassword(!securePassword)}\n                />\n            </View>\n        );\n    };\n\n    const renderForgotPasswordAndRegister = () => (\n        <View style={styles.forgotAndRegisterContainer}>\n            <TouchableOpacity onPress={goToForgotPassword}>\n                <Text style={styles.forgotPassword}>Quên mật khẩu?</Text>\n            </TouchableOpacity>\n            <TouchableOpacity onPress={goToRegister}>\n                <Text style={styles.register}>Đăng ký</Text>\n            </TouchableOpacity>\n        </View>\n    );\n\n    const renderButton = () => (\n        <Button\n            title=\"Đăng nhập\"\n            onPress={onLogin}\n            customStyles={{ marginTop: scales(30), marginBottom: scales(20) }}\n        />\n    );\n\n    const renderContent = () => (\n        <KeyboardAwareScrollView\n            contentContainerStyle={styles.content}\n            extraHeight={scales(125)}\n            keyboardShouldPersistTaps=\"handled\"\n            showsVerticalScrollIndicator={false}\n            enableOnAndroid>\n            {renderHeader()}\n            {renderInputEmail()}\n            {renderInputPassword()}\n            {renderForgotPasswordAndRegister()}\n            {renderButton()}\n        </KeyboardAwareScrollView>\n    );\n\n    return <View style={styles.container}>{renderContent()}</View>;\n};\n\nexport default LoginScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            paddingTop: Sizes.statusBarHeight,\n            backgroundColor: color.Color_Bg,\n        },\n        content: {\n            marginHorizontal: scales(15),\n        },\n        headerContainer: {\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginTop: scales(40),\n        },\n        textHeader: {\n            ...Fonts.inter700,\n            color: color.Color_Primary,\n            fontSize: scales(24),\n        },\n        iconHeaderContainer: {\n            marginTop: scales(20),\n        },\n        title: {\n            ...Fonts.inter400,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n            marginBottom: scales(8),\n        },\n        inputPasswordContainer: {\n            marginTop: scales(20),\n        },\n        forgotAndRegisterContainer: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: scales(20),\n        },\n        forgotPassword: {\n            ...Fonts.inter600,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n            textDecorationLine: 'underline',\n        },\n        register: {\n            ...Fonts.inter600,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/login/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/main/MyTabBar.tsx",["426"],[],"import { BottomTabBarProps, createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { lowerFirst, upperFirst } from 'lodash';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport SvgIcons from 'assets/svgs';\n\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { EThemeColor } from 'constants/index';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { RootNavigatorParamList } from 'navigation/types';\nimport { navigate } from 'navigation/utils';\n\nimport Fonts from 'themes/fonts';\nimport Sizes from 'themes/sizes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst Tab = createBottomTabNavigator<RootNavigatorParamList>();\n\nconst MyTabBar = (props: BottomTabBarProps) => {\n    const { theme } = useTheme();\n    const { t } = useTranslation();\n    const styles = myStyles(theme);\n    const { state } = props;\n\n    return (\n        <View style={styles.container}>\n            {state?.routes?.map((route, index) => {\n                const isFocused = state.index === index;\n\n                const onPress = () => {\n                    if (!isFocused) {\n                        navigate(route.name as keyof RootNavigatorParamList);\n                    }\n                };\n\n                const IconTab = SvgIcons[`IcTab${upperFirst(route.name)}${isFocused ? 'Active' : ''}`];\n\n                return (\n                    <TouchableOpacity shouldHaptic key={index.toString()} style={styles.btnTab} onPress={onPress}>\n                        <IconTab width={scales(27)} height={scales(27)} />\n                        <Text\n                            style={[\n                                styles.title,\n                                { color: isFocused ? getThemeColor().Color_Primary : getThemeColor().Text_Dark_1 },\n                            ]}>\n                            {t(`tabBar.${lowerFirst(route.name)}`)}\n                        </Text>\n                    </TouchableOpacity>\n                );\n            })}\n        </View>\n    );\n};\n\nexport default MyTabBar;\n\nconst myStyles = (theme: EThemeColor) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flexDirection: 'row',\n            height: Sizes.bottomSpace + scales(60),\n            paddingBottom: Sizes.bottomSpace,\n            backgroundColor: color.Color_Bg,\n        },\n        btnTab: {\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'flex-end',\n            paddingBottom: scales(5),\n        },\n        title: {\n            ...Fonts.inter400,\n            paddingTop: scales(5),\n            fontSize: scales(11),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/main/constants.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/main/index.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/nutritionalRegimen/NutritionalRegimenScreen.tsx",["427"],[],"import React from 'react';\nimport { FlatList, Image, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport Images from 'assets/images';\nimport SvgIcons from 'assets/svgs';\n\nimport Header from 'components/Header';\nimport Input from 'components/Input';\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst NutritionalRegimenScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderHeader = () => (\n        <Header\n            title=\"Chế độ dinh dưỡng\"\n            iconRight={<SvgIcons.IcSave width={scales(17)} height={scales(17)} color={getThemeColor().Text_Dark_1} />}\n        />\n    );\n\n    const renderInputSearch = () => <Input placeholder=\"Tên thực phẩm, thành phần chính\" />;\n\n    const renderItemSuitable = () => (\n        <View style={styles.itemSuitableContainer}>\n            <Image source={Images.MacCa} style={styles.imageItemSuitable} />\n            <Text style={styles.titleItemSuitable}>Hạt mắc ca</Text>\n        </View>\n    );\n\n    const renderContentSuitable = () => (\n        <View>\n            <Text style={styles.titleContent}>Phù hợp với mẹ</Text>\n            <FlatList\n                data={[1, 2, 3, 4, 5, 6]}\n                renderItem={renderItemSuitable}\n                keyExtractor={(item) => item.toString()}\n                showsHorizontalScrollIndicator={false}\n                horizontal\n            />\n        </View>\n    );\n\n    const renderContentFoods = () => (\n        <View style={styles.contentFoodContainer}>\n            <Text style={styles.titleContent}>Nhóm thực phẩm</Text>\n            <View style={styles.rowItems}>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Meat} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Thịt</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Seafood} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Thủy hải sản</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.OrganicFood} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Rau củ</Text>\n                </TouchableOpacity>\n            </View>\n            <View style={[styles.rowItems, styles.rowBottom]}>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Vegetable} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Trái cây</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.FastFoods} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Ăn vặt</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Drink} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Đồ uống</Text>\n                </TouchableOpacity>\n            </View>\n            <View style={[styles.rowItems, styles.rowBottom]}>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Vegetable} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Thực phẩm bổ sung</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.FastFoods} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Hạt, Ngũ cốc</Text>\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.itemContentFoodContainer}>\n                    <View style={styles.imgContentFoodItemContainer}>\n                        <Image source={Images.Drink} style={styles.imgContentFoodItem} resizeMode=\"contain\" />\n                    </View>\n                    <Text style={styles.itemContentFoodText}>Thực phẩm từ sữa</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    const renderContent = () => (\n        <ScrollView\n            style={styles.wrapperContent}\n            showsVerticalScrollIndicator={false}\n            contentContainerStyle={styles.contentContainer}>\n            {renderInputSearch()}\n            {renderContentSuitable()}\n            {renderContentFoods()}\n        </ScrollView>\n    );\n\n    return (\n        <View style={styles.container}>\n            {renderHeader()}\n            {renderContent()}\n        </View>\n    );\n};\n\nexport default NutritionalRegimenScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        wrapperContent: {\n            flexGrow: 1,\n            paddingHorizontal: scales(15),\n        },\n        contentContainer: {\n            paddingBottom: scales(30),\n            paddingTop: scales(15),\n        },\n        imageItemSuitable: {\n            width: scales(50),\n            height: scales(50),\n            borderRadius: scales(8),\n        },\n        itemSuitableContainer: {\n            marginHorizontal: scales(15),\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        titleItemSuitable: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginTop: scales(10),\n        },\n        titleContent: {\n            ...Fonts.inter700,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n            marginVertical: scales(10),\n        },\n        contentFoodContainer: {\n            marginTop: scales(10),\n        },\n        imgContentFoodItemContainer: {\n            backgroundColor: color.Color_Bg,\n            padding: scales(10),\n            borderRadius: 999,\n\n            shadowColor: color.Text_Dark_1,\n            shadowOffset: { width: -1, height: 4 },\n            shadowOpacity: 0.3,\n            shadowRadius: 3,\n        },\n        imgContentFoodItem: {\n            width: scales(40),\n            height: scales(40),\n        },\n        itemContentFoodContainer: {\n            alignItems: 'center',\n            justifyContent: 'center',\n            width: (Sizes.scrWidth - scales(30)) / 3,\n        },\n        itemContentFoodText: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginTop: scales(15),\n            textAlign: 'center',\n            width: (Sizes.scrWidth - scales(30)) / 4,\n        },\n        rowItems: {\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start',\n        },\n        rowBottom: {\n            marginTop: scales(30),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/nutritionalRegimen/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyDueDateCalculator/PregnancyDueDateCalculatorScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyDueDateCalculator/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyProducts/PregnancyProductsScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyProducts/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyWeekByWeek/PregnancyWeekByWeekScreen.tsx",["428"],[],"import React from 'react';\nimport { Image, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport Images from 'assets/images';\nimport SvgIcons from 'assets/svgs';\n\nimport Header from 'components/Header';\nimport TouchableOpacity from 'components/TouchableOpacity';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst PregnancyWeekByWeekScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderHeader = () => <Header title=\"Thai kỳ theo tuần\" />;\n\n    const renderContentHeader = () => (\n        <View style={styles.contentContentContainer}>\n            <Text style={styles.textTime}>Thời gian: </Text>\n            <TouchableOpacity style={styles.weekContainer}>\n                <Text style={styles.week}>Tuần 1</Text>\n                <SvgIcons.IcDownReward width={scales(10)} height={scales(10)} color={getThemeColor().Text_Dark_1} />\n            </TouchableOpacity>\n        </View>\n    );\n\n    const renderItems = () => (\n        <View style={styles.itemContainer}>\n            <Image source={Images.PregnancyWeek1} style={styles.imageWeek} />\n\n            <View>\n                <View style={styles.itemHeaderContainer}>\n                    <Image source={Images.PregnancyBaby} style={styles.iconItemHeader} />\n                    <Text style={styles.titleItemHeader}>Bé yêu</Text>\n                </View>\n                <View style={styles.descContainer}>\n                    <Text style={styles.desc}>\n                        Chào mẹ, vậy là mẹ đã chính thức vào tuần đầu tiên của hành trình 40 tuần ấp ủ “mầm sống yêu\n                        thương” rồi đấy! Trong tuần đầu...\n                    </Text>\n                </View>\n                <TouchableOpacity style={styles.moreContainer}>\n                    <Text style={styles.more}>Xem thêm</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.line} />\n\n            <View>\n                <View style={styles.itemHeaderContainer}>\n                    <Image source={Images.PregnancyBaby} style={styles.iconItemHeader} />\n                    <Text style={styles.titleItemHeader}>Bé yêu</Text>\n                </View>\n                <View style={styles.descContainer}>\n                    <Text style={styles.desc}>\n                        Chào mẹ, vậy là mẹ đã chính thức vào tuần đầu tiên của hành trình 40 tuần ấp ủ “mầm sống yêu\n                        thương” rồi đấy! Trong tuần đầu...\n                    </Text>\n                </View>\n                <TouchableOpacity style={styles.moreContainer}>\n                    <Text style={styles.more}>Xem thêm</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.line} />\n\n            <View>\n                <View style={styles.itemHeaderContainer}>\n                    <Image source={Images.PregnancyBaby} style={styles.iconItemHeader} />\n                    <Text style={styles.titleItemHeader}>Bé yêu</Text>\n                </View>\n                <View style={styles.descContainer}>\n                    <Text style={styles.desc}>\n                        Chào mẹ, vậy là mẹ đã chính thức vào tuần đầu tiên của hành trình 40 tuần ấp ủ “mầm sống yêu\n                        thương” rồi đấy! Trong tuần đầu...\n                    </Text>\n                </View>\n                <TouchableOpacity style={styles.moreContainer}>\n                    <Text style={styles.more}>Xem thêm</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n\n    const renderContent = () => (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.wrapperContent}\n            contentContainerStyle={styles.contentContainer}>\n            {renderContentHeader()}\n            {renderItems()}\n        </ScrollView>\n    );\n\n    return (\n        <View style={styles.container}>\n            {renderHeader()}\n            {renderContent()}\n        </View>\n    );\n};\n\nexport default PregnancyWeekByWeekScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        wrapperContent: {\n            flexGrow: 1,\n            paddingHorizontal: scales(15),\n        },\n        contentContainer: {\n            paddingBottom: scales(30),\n            paddingTop: scales(15),\n        },\n        contentContentContainer: {\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        weekContainer: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        week: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            marginLeft: scales(3),\n            marginRight: scales(5),\n        },\n        textTime: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n        },\n        itemContainer: {\n            marginTop: scales(20),\n        },\n        imageWeek: {\n            width: Sizes.scrWidth - scales(30),\n            height: scales(180),\n            borderRadius: 6,\n        },\n        itemHeaderContainer: {\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginTop: scales(10),\n        },\n        iconItemHeader: {\n            width: scales(25),\n            height: scales(25),\n            marginRight: scales(10),\n        },\n        titleItemHeader: {\n            ...Fonts.inter600,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n        },\n        descContainer: {\n            marginLeft: scales(25),\n            marginTop: scales(8),\n        },\n        desc: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n        },\n        moreContainer: {\n            marginTop: scales(8),\n            marginBottom: scales(12),\n        },\n        more: {\n            ...Fonts.inter600,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            textAlign: 'right',\n        },\n        line: {\n            borderWidth: 0.5,\n            borderColor: color.Text_Dark_5,\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/pregnancyWeekByWeek/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/premium/PremiumScreen.tsx",["429"],[],"import React from 'react';\nimport { Image, ScrollView, StyleSheet, Text, View } from 'react-native';\n\nimport Images from 'assets/images';\n\nimport Button from 'components/Button/Button';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { Fonts, Sizes } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\n\nconst PremiumScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n\n    const renderContentHeader = () => (\n        <View>\n            <View style={styles.contentHeaderContainer}>\n                <Image source={Images.GirlHome} style={styles.girlHome} />\n            </View>\n        </View>\n    );\n\n    const renderContent = () => (\n        <View style={styles.content}>\n            <Text style={styles.title}>\n                Trải nghiệm những chức năng trên với gói dịch vụ <Text style={styles.txtPrimary}>Mẹ bầu Premium</Text>\n            </Text>\n            <View style={styles.descContainer}>\n                <Text style={styles.titleDesc}>Mua một lần dùng một đời trải nghiệm các chức năng:</Text>\n                <View style={styles.itemDesc}>\n                    <View style={styles.headerDesc}>\n                        <Image source={Images.CheckCircle} style={styles.checkCircle} />\n                        <Text style={styles.titleDesc}>Sức khỏe thai nhi</Text>\n                    </View>\n                    <Text style={styles.textDes}>\n                        Lấy dữ liệu của bé để kiểm tra mức độ so với tiêu chuẩn rồi từ đó đưa cho mẹ bầu lời khuyên để\n                        giúp bé yêu có sức khỏe ổn định nhất.\n                    </Text>\n                </View>\n\n                <View style={styles.itemDesc}>\n                    <View style={styles.headerDesc}>\n                        <Image source={Images.CheckCircle} style={styles.checkCircle} />\n                        <Text style={styles.titleDesc}>Thai giáo</Text>\n                    </View>\n                    <Text style={styles.textDes}>\n                        Lấy dữ liệu của bé để kiểm tra mức độ so với tiêu chuẩn rồi từ đó đưa cho mẹ bầu lời khuyên để\n                        giúp bé yêu có sức khỏe ổn định nhất.\n                    </Text>\n                </View>\n            </View>\n        </View>\n    );\n\n    const renderButton = () => (\n        <View style={styles.buttonContainer}>\n            <Button title=\"Thanh toán ngay\" />\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <ScrollView\n                style={styles.wrapperContent}\n                contentContainerStyle={styles.contentContainer}\n                keyboardShouldPersistTaps=\"handled\"\n                showsVerticalScrollIndicator={false}>\n                <View style={styles.imageHome} />\n                {renderContentHeader()}\n                {renderContent()}\n            </ScrollView>\n            {renderButton()}\n        </View>\n    );\n};\n\nexport default PremiumScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        wrapperContent: {\n            flexGrow: 1,\n            paddingHorizontal: scales(15),\n        },\n        contentContainer: {\n            paddingBottom: scales(30),\n            paddingTop: scales(15),\n        },\n        imageHome: {\n            backgroundColor: color.Color_Primary2,\n            width: Sizes.scrWidth * 2,\n            borderRadius: Sizes.scrWidth,\n            height: Sizes.scrWidth * 2,\n            position: 'absolute',\n            top: -Sizes.scrWidth / 2 - Sizes.scrWidth,\n            left: -Sizes.scrWidth / 2,\n        },\n        content: {\n            marginTop: scales(15),\n        },\n        contentHeaderContainer: {\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            marginTop: Sizes.scrWidth / 4,\n        },\n        girlHome: {\n            marginTop: scales(10),\n            width: scales(120),\n            height: scales(120),\n            backgroundColor: color.Color_Primary,\n            borderRadius: scales(120),\n        },\n        title: {\n            ...Fonts.inter600,\n            fontSize: scales(16),\n            color: color.Text_Dark_1,\n            lineHeight: scales(25),\n        },\n        txtPrimary: {\n            color: color.Color_Primary,\n        },\n        descContainer: {\n            marginTop: scales(20),\n            backgroundColor: color.Color_Bg,\n            padding: scales(10),\n            borderRadius: scales(6),\n\n            shadowColor: color.Text_Dark_1,\n            shadowOffset: { width: -1, height: 2 },\n            shadowOpacity: 0.2,\n            shadowRadius: 3,\n        },\n        titleDesc: {\n            ...Fonts.inter600,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n            lineHeight: scales(19),\n        },\n        checkCircle: {\n            width: scales(20),\n            height: scales(20),\n            marginRight: scales(10),\n        },\n        headerDesc: {\n            flexDirection: 'row',\n            alignItems: 'center',\n        },\n        itemDesc: {\n            marginTop: scales(10),\n        },\n        textDes: {\n            ...Fonts.inter400,\n            fontSize: scales(12),\n            color: color.Text_Dark_1,\n            lineHeight: scales(19),\n        },\n        buttonContainer: {\n            marginHorizontal: scales(15),\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/prenatalCareCheckups/PrenatalCareCheckupsScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/prenatalCareCheckups/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/register/RegisterScreen.tsx",["430"],[],"import axios from 'axios';\nimport React, { useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\n\nimport SvgIcons from 'assets/svgs';\n\nimport Button from 'components/Button/Button';\nimport Header from 'components/Header';\nimport Input from 'components/Input';\n\nimport { EEvnKey } from 'constants/env.constant';\n\nimport { useTheme } from 'hooks/useTheme';\n\nimport { goBack } from 'navigation/utils';\n\nimport { goToVerifyOTP } from 'screens/verifyOTP/src/utils';\n\nimport { Fonts } from 'themes';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\nimport { showCustomToast } from 'utils/toast';\n\nconst RegisterScreen = () => {\n    const { theme } = useTheme();\n    const styles = myStyles(theme);\n    const [securePassword, setSecurePassword] = useState<boolean>(true);\n    const [email, setEmail] = useState<string>('');\n    const [password, setPassword] = useState<string>('');\n    const [phone, setPhone] = useState<string>('');\n    const [confirmPassword, setConfirmPassword] = useState<string>('');\n\n    const onRegister = async () => {\n        // TODO: re check when open logic\n        // try {\n        //     if (validateInputPassword()) {\n        //         return;\n        //     }\n        //     const response = await axios.post(`https://68f7-2a09-bac1-7aa0-50-00-245-e.ap.ngrok.io/api/accounts`, {\n        //         email,\n        //         phone,\n        //         password,\n        //     });\n        //     if (!response) {\n        //         showCustomToast('Error create account');\n        //         return;\n        //     }\n        //     // success\n        //     setEmail('');\n        //     setPassword('');\n        //     setConfirmPassword('');\n        //     setPhone('');\n        //     goToVerifyOTP(email);\n        // } catch (error) {\n        //     if (error?.message) {\n        //         showCustomToast(error.message);\n        //         return;\n        //     }\n        // }\n        goToVerifyOTP('abc@gmai.com');\n    };\n\n    const validateInputPassword = () => {\n        if (password !== confirmPassword) {\n            showCustomToast('Password is incorrect');\n            return true;\n        }\n    };\n\n    const renderHeader = () => (\n        <View style={styles.tileContainer}>\n            <Text style={styles.titleHeader}>Đăng ký</Text>\n        </View>\n    );\n\n    const renderInputEmail = () => (\n        <View>\n            <Text style={styles.title}>Email</Text>\n            <Input\n                value={email}\n                onChangeText={setEmail}\n                keyboardType=\"email-address\"\n                placeholder=\"Vui lòng nhập email\"\n            />\n        </View>\n    );\n\n    const renderInputPhone = () => (\n        <View style={styles.inputPasswordContainer}>\n            <Text style={styles.title}>Số điện thoại</Text>\n            <Input\n                value={phone}\n                onChangeText={setPhone}\n                keyboardType=\"numeric\"\n                placeholder=\"Vui lòng nhập số điện thoại\"\n            />\n        </View>\n    );\n\n    const renderInputPassword = () => {\n        const Icon = SvgIcons[`IcVisibility${securePassword ? 'Off' : ''}`];\n        return (\n            <View style={styles.inputPasswordContainer}>\n                <Text style={styles.title}>Mật khẩu</Text>\n                <Input\n                    value={password}\n                    onChangeText={setPassword}\n                    placeholder=\"Vui lòng nhập mật khẩu\"\n                    secureTextEntry={securePassword}\n                    icon={<Icon width={scales(15)} height={scales(15)} />}\n                    onPressIcon={() => setSecurePassword(!securePassword)}\n                />\n            </View>\n        );\n    };\n\n    const renderInputConfirmPassword = () => {\n        const Icon = SvgIcons[`IcVisibility${securePassword ? 'Off' : ''}`];\n        return (\n            <View style={styles.inputPasswordContainer}>\n                <Text style={styles.title}>Nhập lại mật khẩu</Text>\n                <Input\n                    value={confirmPassword}\n                    onChangeText={setConfirmPassword}\n                    placeholder=\"Vui lòng nhập lại mật khẩu\"\n                    secureTextEntry={securePassword}\n                    icon={<Icon width={scales(15)} height={scales(15)} />}\n                    onPressIcon={() => setSecurePassword(!securePassword)}\n                />\n            </View>\n        );\n    };\n\n    const renderButton = () => (\n        <Button\n            title=\"Đăng ký\"\n            onPress={onRegister}\n            customStyles={{ marginTop: scales(30), marginBottom: scales(20) }}\n        />\n    );\n\n    const renderContent = () => (\n        <View style={styles.content}>\n            {renderInputEmail()}\n            {renderInputPhone()}\n            {renderInputPassword()}\n            {renderInputConfirmPassword()}\n            {renderButton()}\n        </View>\n    );\n\n    return (\n        <View style={styles.container}>\n            <Header />\n            <KeyboardAwareScrollView\n                extraHeight={scales(125)}\n                keyboardShouldPersistTaps=\"handled\"\n                showsVerticalScrollIndicator={false}\n                enableOnAndroid>\n                {renderHeader()}\n                {renderContent()}\n            </KeyboardAwareScrollView>\n        </View>\n    );\n};\n\nexport default RegisterScreen;\n\nconst myStyles = (theme: string) => {\n    const color = getThemeColor();\n    return StyleSheet.create({\n        container: {\n            flex: 1,\n            backgroundColor: color.Color_Bg,\n        },\n        content: {\n            marginHorizontal: scales(15),\n        },\n        title: {\n            ...Fonts.inter400,\n            fontSize: scales(14),\n            color: color.Text_Dark_1,\n            marginBottom: scales(8),\n        },\n        inputPasswordContainer: {\n            marginTop: scales(20),\n        },\n        tileContainer: {\n            marginTop: scales(40),\n            marginBottom: scales(40),\n            alignItems: 'center',\n        },\n        titleHeader: {\n            ...Fonts.inter700,\n            fontSize: scales(24),\n            color: color.Color_Primary,\n        },\n    });\n};\n","/Users/admin/Code/Home/mobile/babau/src/screens/register/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/verifyOTP/VerifyOTPScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/verifyOTP/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/services/common/auth.header.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/services/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/services/userService.ts",["431"],[],"import axios from 'axios';\nimport { useDispatch } from 'react-redux';\n\nimport { EEvnKey } from '../constants/env.constant';\n\nimport { userLogin, userLogout } from 'states/user';\n\nconst API_URL = process.env[EEvnKey.API_URL];\nconst dispatch = useDispatch();\n\nconst register = (user: User.UserRegisterRequest) => {\n    return axios.post(API_URL + 'accounts', user);\n};\n\nconst login = async (user: User.UserLoginRequest) => {\n    try {\n        const response: User.UserLoginResponse = await axios.post(API_URL + 'login', user);\n        if (response.jwt) {\n            // save to reducer\n            dispatch(userLogin(response));\n        }\n        return response;\n    } catch (error) {\n        console.debug('Error:: Login service');\n        return;\n    }\n};\n\nconst logout = () => {\n    dispatch(userLogout());\n};\n\nconst UserService = {\n    register,\n    login,\n    logout,\n};\n\nexport default UserService;\n","/Users/admin/Code/Home/mobile/babau/src/states/counter/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/states/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/states/message.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/states/types.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/states/user/index.ts",["432","433","434","435"],[],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\n\nimport { UserService } from 'services';\n\nimport { setMessage } from 'states/message';\n\nconst initialState = {\n    data: [],\n    isLoggedIn: false,\n    userInfo: {},\n    jwt: null,\n    error: '',\n    success: false,\n};\n\nexport const registerAsync = createAsyncThunk('user/registerAsync', async () => {});\nexport type TodoId = string;\nexport type Todo = {\n    id: TodoId;\n    title: string;\n    completed: boolean;\n};\n\nexport const fetchUsersAsync = createAsyncThunk<Todo[]>('user/fetchUsersAsync', async () => {\n    const response = await fetch(`https://jsonplaceholder.typicode.com/todos`);\n    // Get the JSON from the response:\n    const data = await response.json();\n\n    // Return result:\n    return data;\n});\n\nexport const register = createAsyncThunk('user/register', async (user: User.UserRegisterRequest, thunkAPI) => {\n    try {\n        const response = await UserService.register(user);\n        thunkAPI.dispatch(setMessage(response));\n        return response;\n    } catch (error) {\n        const message =\n            (error.message && error.response.data && error.response.data.message) || error.message || error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue(message);\n    }\n});\n\nexport const login = createAsyncThunk('user/login', async (user: User.UserLoginRequest, thunkAPI) => {\n    try {\n        const data = await UserService.login(user);\n        return { user: data };\n    } catch (error) {\n        const message =\n            (error.message && error.response.data && error.response.data.message) || error.message || error.toString();\n        thunkAPI.dispatch(setMessage(message));\n        return thunkAPI.rejectWithValue(message);\n    }\n});\n\nexport const logout = createAsyncThunk('user/logout', async () => {\n    await UserService.logout();\n});\n\nexport const userSlice = createSlice({\n    name: 'user',\n    initialState,\n    reducers: {\n        userLogin: (state, action) => {\n            console.log('userLogin', action);\n            state.data = action.payload;\n        },\n        userLogout: (state) => {\n            console.log('userLogout', state);\n            state = initialState;\n        },\n    },\n    extraReducers: (builder) => {\n        builder.addCase(fetchUsersAsync.pending, (state, { payload }) => {\n            console.log('Pending::');\n        });\n        builder.addCase(fetchUsersAsync.fulfilled, (state, { payload }) => {\n            state.data.push(...payload);\n        });\n        builder.addCase(fetchUsersAsync.rejected, (state, { payload }) => {\n            console.log('payload', payload);\n        });\n        builder.addCase(register.fulfilled, (state, action) => {\n            state.isLoggedIn = false;\n        });\n        builder.addCase(register.rejected, (state, action) => {\n            state.isLoggedIn = false;\n        });\n        builder.addCase(login.fulfilled, (state, action) => {\n            state.isLoggedIn = true;\n            state.userInfo = action.payload;\n        });\n        builder.addCase(login.rejected, (state, action) => {\n            state.isLoggedIn = false;\n            state.userInfo = null;\n        });\n        builder.addCase(logout.fulfilled, (state, action) => {\n            state.isLoggedIn = false;\n            state.userInfo = null;\n        });\n    },\n});\n\nexport const { userLogin, userLogout } = userSlice.actions;\n\nexport default userSlice.reducer;\n","/Users/admin/Code/Home/mobile/babau/src/states/user/selector.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/themes/colors.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/themes/fonts.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/themes/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/themes/sizes.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/typings/index.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/utils/dimensions.ts",[],["436"],"/Users/admin/Code/Home/mobile/babau/src/utils/getThemeColor.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/utils/scales.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/utils/storages.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/utils/string.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/utils/toast.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/premium/src/utils.ts",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/registerSuccess/RegisterSuccessScreen.tsx",[],[],"/Users/admin/Code/Home/mobile/babau/src/screens/registerSuccess/src/utils.ts",[],[],{"ruleId":"437","severity":1,"message":"438","line":6,"column":1,"nodeType":"439","endLine":6,"endColumn":27,"fix":"440"},{"ruleId":"437","severity":1,"message":"441","line":10,"column":1,"nodeType":"439","endLine":10,"endColumn":44,"fix":"442"},{"ruleId":"443","severity":1,"message":"444","line":23,"column":4,"nodeType":"445","messageId":"446","endLine":23,"endColumn":15,"suppressions":"447"},{"ruleId":"443","severity":1,"message":"444","line":34,"column":4,"nodeType":"445","messageId":"446","endLine":34,"endColumn":15,"suppressions":"448"},{"ruleId":"443","severity":1,"message":"444","line":43,"column":3,"nodeType":"445","messageId":"446","endLine":43,"endColumn":14,"suppressions":"449"},{"ruleId":"450","severity":1,"message":"451","line":55,"column":43,"nodeType":"452","messageId":"453","fix":"454"},{"ruleId":"450","severity":1,"message":"455","line":73,"column":23,"nodeType":"452","messageId":"453","fix":"456"},{"ruleId":"457","severity":2,"message":"458","line":29,"column":16,"nodeType":"459","messageId":"460","endLine":80,"endColumn":2,"suppressions":"461"},{"ruleId":"450","severity":1,"message":"462","line":38,"column":71,"nodeType":"452","messageId":"453","fix":"463"},{"ruleId":"450","severity":1,"message":"462","line":62,"column":65,"nodeType":"452","messageId":"453","fix":"464"},{"ruleId":"450","severity":1,"message":"462","line":75,"column":19,"nodeType":"452","messageId":"453","fix":"465"},{"ruleId":"450","severity":1,"message":"451","line":25,"column":38,"nodeType":"452","messageId":"453","fix":"466"},{"ruleId":"450","severity":1,"message":"462","line":73,"column":53,"nodeType":"452","messageId":"453","fix":"467"},{"ruleId":"450","severity":1,"message":"462","line":35,"column":19,"nodeType":"452","messageId":"453","fix":"468"},{"ruleId":"450","severity":1,"message":"469","line":43,"column":70,"nodeType":"452","messageId":"453","fix":"470"},{"ruleId":"450","severity":1,"message":"462","line":96,"column":53,"nodeType":"452","messageId":"453","fix":"471"},{"ruleId":"437","severity":1,"message":"472","line":19,"column":1,"nodeType":"439","endLine":19,"endColumn":59,"fix":"473"},{"ruleId":"450","severity":1,"message":"451","line":89,"column":28,"nodeType":"452","messageId":"453","fix":"474"},{"ruleId":"450","severity":1,"message":"475","line":52,"column":31,"nodeType":"452","messageId":"453","fix":"476"},{"ruleId":"450","severity":1,"message":"451","line":121,"column":60,"nodeType":"452","messageId":"453","fix":"477"},{"ruleId":"450","severity":1,"message":"451","line":95,"column":60,"nodeType":"452","messageId":"453","fix":"478"},{"ruleId":"450","severity":1,"message":"462","line":71,"column":53,"nodeType":"452","messageId":"453","fix":"479"},{"ruleId":"450","severity":1,"message":"462","line":161,"column":32,"nodeType":"452","messageId":"453","fix":"480"},{"ruleId":"443","severity":1,"message":"444","line":24,"column":9,"nodeType":"445","messageId":"446","endLine":24,"endColumn":22},{"ruleId":"443","severity":1,"message":"444","line":67,"column":13,"nodeType":"445","messageId":"446","endLine":67,"endColumn":24},{"ruleId":"443","severity":1,"message":"444","line":71,"column":13,"nodeType":"445","messageId":"446","endLine":71,"endColumn":24},{"ruleId":"443","severity":1,"message":"444","line":77,"column":13,"nodeType":"445","messageId":"446","endLine":77,"endColumn":24},{"ruleId":"443","severity":1,"message":"444","line":83,"column":13,"nodeType":"445","messageId":"446","endLine":83,"endColumn":24},{"ruleId":"457","severity":2,"message":"481","line":4,"column":26,"nodeType":"459","messageId":"460","endLine":25,"endColumn":2,"suppressions":"482"},"import/order","There should be at least one empty line between import groups","ImportDeclaration",{"range":"483","text":"484"},"`react-test-renderer` import should occur before import of `../App`",{"range":"485","text":"486"},"no-console","Unexpected console statement.","MemberExpression","unexpected",["487"],["488"],["489"],"react/jsx-closing-bracket-location","The closing bracket must be aligned with the opening tag (expected column 9 on the next line)","JSXOpeningElement","bracketLocation",{"range":"490","text":"491"},"The closing bracket must be aligned with the opening tag (expected column 17 on the next line)",{"range":"492","text":"493"},"complexity","Arrow function has a complexity of 11. Maximum allowed is 10.","ArrowFunctionExpression","complex",["494"],"The closing bracket must be aligned with the opening tag (expected column 13 on the next line)",{"range":"495","text":"496"},{"range":"497","text":"496"},{"range":"498","text":"496"},{"range":"499","text":"491"},{"range":"500","text":"496"},{"range":"501","text":"496"},"The closing bracket must be aligned with the opening tag (expected column 21 on the next line)",{"range":"502","text":"503"},{"range":"504","text":"496"},"`navigation/types` import should occur before import of `navigation/utils`",{"range":"505","text":"506"},{"range":"507","text":"491"},"The closing bracket must be aligned with the opening tag (expected column 25 on the next line)",{"range":"508","text":"509"},{"range":"510","text":"491"},{"range":"511","text":"491"},{"range":"512","text":"496"},{"range":"513","text":"496"},"Arrow function has a complexity of 17. Maximum allowed is 10.",["514"],[69,69],"\n",[70,201],"import renderer from 'react-test-renderer';\nimport App from '../App';\n\n// Note: test renderer must be required after react-native.\n",{"kind":"515","justification":"516"},{"kind":"515","justification":"516"},{"kind":"515","justification":"516"},[1526,1527],"\n        >",[2267,2268],"\n                >",{"kind":"515","justification":"516"},[1085,1086],"\n            >",[1844,1845],[2423,2424],[839,840],[3249,3250],[998,999],[1377,1378],"\n                    >",[4492,4493],[347,617],"import { RootNavigatorParamList } from 'navigation/types';\nimport { resetStack } from 'navigation/utils';\n\nimport { getThemeColor } from 'utils/getThemeColor';\nimport { scales } from 'utils/scales';\nimport Storages, { KeyStorage } from 'utils/storages';\n\nimport 'i18n';\n",[3278,3279],[1920,1921],"\n                        >",[5835,5836],[3862,3863],[2739,2740],[5306,5307],{"kind":"515","justification":"516"},"directive",""]